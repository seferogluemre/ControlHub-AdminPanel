/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as adminRouteRouteImport } from './routes/(admin)/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedVisitorsIndexRouteImport } from './routes/_authenticated/visitors/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedChatsIndexRouteImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAgentsIndexRouteImport } from './routes/_authenticated/agents/index'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'
import { Route as adminLiveChatPreChatsRouteImport } from './routes/(admin)/live-chat/pre-chats'
import { Route as adminLiveChatChatbotWindowRouteImport } from './routes/(admin)/live-chat/chatbot-window'
import { Route as adminLiveChatChatbotButonRouteImport } from './routes/(admin)/live-chat/chatbot-buton'
import { Route as adminGlobalSettingsDepartmentsIndexRouteImport } from './routes/(admin)/global-settings/departments/index'
import { Route as adminGlobalSettingsDepartmentsNewRouteImport } from './routes/(admin)/global-settings/departments/new'
import { Route as adminGlobalSettingsDepartmentsEditIdRouteImport } from './routes/(admin)/global-settings/departments/edit/$id'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const adminRouteRoute = adminRouteRouteImport.update({
  id: '/(admin)',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authRouteRoute,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authRouteRoute,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => authRouteRoute,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authRouteRoute,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedVisitorsIndexRoute =
  AuthenticatedVisitorsIndexRouteImport.update({
    id: '/visitors/',
    path: '/visitors/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAgentsIndexRoute =
  AuthenticatedAgentsIndexRouteImport.update({
    id: '/agents/',
    path: '/agents/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const adminLiveChatPreChatsRoute = adminLiveChatPreChatsRouteImport.update({
  id: '/live-chat/pre-chats',
  path: '/live-chat/pre-chats',
  getParentRoute: () => adminRouteRoute,
} as any)
const adminLiveChatChatbotWindowRoute =
  adminLiveChatChatbotWindowRouteImport.update({
    id: '/live-chat/chatbot-window',
    path: '/live-chat/chatbot-window',
    getParentRoute: () => adminRouteRoute,
  } as any)
const adminLiveChatChatbotButonRoute =
  adminLiveChatChatbotButonRouteImport.update({
    id: '/live-chat/chatbot-buton',
    path: '/live-chat/chatbot-buton',
    getParentRoute: () => adminRouteRoute,
  } as any)
const adminGlobalSettingsDepartmentsIndexRoute =
  adminGlobalSettingsDepartmentsIndexRouteImport.update({
    id: '/global-settings/departments/',
    path: '/global-settings/departments/',
    getParentRoute: () => adminRouteRoute,
  } as any)
const adminGlobalSettingsDepartmentsNewRoute =
  adminGlobalSettingsDepartmentsNewRouteImport.update({
    id: '/global-settings/departments/new',
    path: '/global-settings/departments/new',
    getParentRoute: () => adminRouteRoute,
  } as any)
const adminGlobalSettingsDepartmentsEditIdRoute =
  adminGlobalSettingsDepartmentsEditIdRouteImport.update({
    id: '/global-settings/departments/edit/$id',
    path: '/global-settings/departments/edit/$id',
    getParentRoute: () => adminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/live-chat/chatbot-buton': typeof adminLiveChatChatbotButonRoute
  '/live-chat/chatbot-window': typeof adminLiveChatChatbotWindowRoute
  '/live-chat/pre-chats': typeof adminLiveChatPreChatsRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/agents': typeof AuthenticatedAgentsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/visitors': typeof AuthenticatedVisitorsIndexRoute
  '/global-settings/departments/new': typeof adminGlobalSettingsDepartmentsNewRoute
  '/global-settings/departments': typeof adminGlobalSettingsDepartmentsIndexRoute
  '/global-settings/departments/edit/$id': typeof adminGlobalSettingsDepartmentsEditIdRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/live-chat/chatbot-buton': typeof adminLiveChatChatbotButonRoute
  '/live-chat/chatbot-window': typeof adminLiveChatChatbotWindowRoute
  '/live-chat/pre-chats': typeof adminLiveChatPreChatsRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/agents': typeof AuthenticatedAgentsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/visitors': typeof AuthenticatedVisitorsIndexRoute
  '/global-settings/departments/new': typeof adminGlobalSettingsDepartmentsNewRoute
  '/global-settings/departments': typeof adminGlobalSettingsDepartmentsIndexRoute
  '/global-settings/departments/edit/$id': typeof adminGlobalSettingsDepartmentsEditIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(admin)': typeof adminRouteRouteWithChildren
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/(admin)/live-chat/chatbot-buton': typeof adminLiveChatChatbotButonRoute
  '/(admin)/live-chat/chatbot-window': typeof adminLiveChatChatbotWindowRoute
  '/(admin)/live-chat/pre-chats': typeof adminLiveChatPreChatsRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/agents/': typeof AuthenticatedAgentsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/visitors/': typeof AuthenticatedVisitorsIndexRoute
  '/(admin)/global-settings/departments/new': typeof adminGlobalSettingsDepartmentsNewRoute
  '/(admin)/global-settings/departments/': typeof adminGlobalSettingsDepartmentsIndexRoute
  '/(admin)/global-settings/departments/edit/$id': typeof adminGlobalSettingsDepartmentsEditIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/live-chat/chatbot-buton'
    | '/live-chat/chatbot-window'
    | '/live-chat/pre-chats'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/agents'
    | '/chats'
    | '/settings/'
    | '/visitors'
    | '/global-settings/departments/new'
    | '/global-settings/departments'
    | '/global-settings/departments/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/live-chat/chatbot-buton'
    | '/live-chat/chatbot-window'
    | '/live-chat/pre-chats'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/agents'
    | '/chats'
    | '/settings'
    | '/visitors'
    | '/global-settings/departments/new'
    | '/global-settings/departments'
    | '/global-settings/departments/edit/$id'
  id:
    | '__root__'
    | '/(admin)'
    | '/(auth)'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/(admin)/live-chat/chatbot-buton'
    | '/(admin)/live-chat/chatbot-window'
    | '/(admin)/live-chat/pre-chats'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/agents/'
    | '/_authenticated/chats/'
    | '/_authenticated/settings/'
    | '/_authenticated/visitors/'
    | '/(admin)/global-settings/departments/new'
    | '/(admin)/global-settings/departments/'
    | '/(admin)/global-settings/departments/edit/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  adminRouteRoute: typeof adminRouteRouteWithChildren
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(admin)': {
      id: '/(admin)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof adminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/visitors/': {
      id: '/_authenticated/visitors/'
      path: '/visitors'
      fullPath: '/visitors'
      preLoaderRoute: typeof AuthenticatedVisitorsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/agents/': {
      id: '/_authenticated/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AuthenticatedAgentsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/(admin)/live-chat/pre-chats': {
      id: '/(admin)/live-chat/pre-chats'
      path: '/live-chat/pre-chats'
      fullPath: '/live-chat/pre-chats'
      preLoaderRoute: typeof adminLiveChatPreChatsRouteImport
      parentRoute: typeof adminRouteRoute
    }
    '/(admin)/live-chat/chatbot-window': {
      id: '/(admin)/live-chat/chatbot-window'
      path: '/live-chat/chatbot-window'
      fullPath: '/live-chat/chatbot-window'
      preLoaderRoute: typeof adminLiveChatChatbotWindowRouteImport
      parentRoute: typeof adminRouteRoute
    }
    '/(admin)/live-chat/chatbot-buton': {
      id: '/(admin)/live-chat/chatbot-buton'
      path: '/live-chat/chatbot-buton'
      fullPath: '/live-chat/chatbot-buton'
      preLoaderRoute: typeof adminLiveChatChatbotButonRouteImport
      parentRoute: typeof adminRouteRoute
    }
    '/(admin)/global-settings/departments/': {
      id: '/(admin)/global-settings/departments/'
      path: '/global-settings/departments'
      fullPath: '/global-settings/departments'
      preLoaderRoute: typeof adminGlobalSettingsDepartmentsIndexRouteImport
      parentRoute: typeof adminRouteRoute
    }
    '/(admin)/global-settings/departments/new': {
      id: '/(admin)/global-settings/departments/new'
      path: '/global-settings/departments/new'
      fullPath: '/global-settings/departments/new'
      preLoaderRoute: typeof adminGlobalSettingsDepartmentsNewRouteImport
      parentRoute: typeof adminRouteRoute
    }
    '/(admin)/global-settings/departments/edit/$id': {
      id: '/(admin)/global-settings/departments/edit/$id'
      path: '/global-settings/departments/edit/$id'
      fullPath: '/global-settings/departments/edit/$id'
      preLoaderRoute: typeof adminGlobalSettingsDepartmentsEditIdRouteImport
      parentRoute: typeof adminRouteRoute
    }
  }
}

interface adminRouteRouteChildren {
  adminLiveChatChatbotButonRoute: typeof adminLiveChatChatbotButonRoute
  adminLiveChatChatbotWindowRoute: typeof adminLiveChatChatbotWindowRoute
  adminLiveChatPreChatsRoute: typeof adminLiveChatPreChatsRoute
  adminGlobalSettingsDepartmentsNewRoute: typeof adminGlobalSettingsDepartmentsNewRoute
  adminGlobalSettingsDepartmentsIndexRoute: typeof adminGlobalSettingsDepartmentsIndexRoute
  adminGlobalSettingsDepartmentsEditIdRoute: typeof adminGlobalSettingsDepartmentsEditIdRoute
}

const adminRouteRouteChildren: adminRouteRouteChildren = {
  adminLiveChatChatbotButonRoute: adminLiveChatChatbotButonRoute,
  adminLiveChatChatbotWindowRoute: adminLiveChatChatbotWindowRoute,
  adminLiveChatPreChatsRoute: adminLiveChatPreChatsRoute,
  adminGlobalSettingsDepartmentsNewRoute:
    adminGlobalSettingsDepartmentsNewRoute,
  adminGlobalSettingsDepartmentsIndexRoute:
    adminGlobalSettingsDepartmentsIndexRoute,
  adminGlobalSettingsDepartmentsEditIdRoute:
    adminGlobalSettingsDepartmentsEditIdRoute,
}

const adminRouteRouteWithChildren = adminRouteRoute._addFileChildren(
  adminRouteRouteChildren,
)

interface authRouteRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAgentsIndexRoute: typeof AuthenticatedAgentsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedVisitorsIndexRoute: typeof AuthenticatedVisitorsIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAgentsIndexRoute: AuthenticatedAgentsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedVisitorsIndexRoute: AuthenticatedVisitorsIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  adminRouteRoute: adminRouteRouteWithChildren,
  authRouteRoute: authRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
